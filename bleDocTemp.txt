/*--------------------------------------------------------------------------------------------------- 
SERVICE: AnimistBLE
Author: cgewecke June 2016

This service manages interactions between mobile clients and Animist IoT endpoints 
(at: animist-io/whale-island) over Bluetooth LE. Design overview below:

1. Endpoints broadcast a persistent beacon signal which will wake a mobile client up
   and activate AnimistBLE via the client's beacon capture callback. (See AnimistBeacon )

2. AnimistBLE matches the beacon uuid to a pre-determined endpoint service uuid and uses this
   to establish a BLE peripheral connection / read the endpoint's time-variant "pin".  

3. AnimistBLE signs the pin with the private key of the current AnimistAccount and writes this value to 
   the endpoint's 'getContract' characteristic. The endpoint extracts the public account address from the 
   pin message and searches its database of contracts for any that match the calling account. 
   (There should only be one).

4. The endpoint sends back an object consisting of contract code, a proximity requirement, a 
   sessionId, a session expiration date, and the address specified as the contracts
   'authority' e.g. the address the contract expects to sign the tx. 

5. At this point ( assuming contract requirements about proximity are met ) there are three possiblities:  

   a) The user is authorized to sign their own transaction: AnimistBLE transmits code signed w/ the user key,
      and receives the Ethereum transaction hash for the mined operation. 
    
   b) Someone other than the user (like the App provider) needs to sign the transaction - it gets sent 
      to the cloud and returns signed. AnimistBLE submits this to the endpoint and gets the hash. 

   c) Like b), but the signed transaction will get submitted off device at another Ethereum node. AnimistBLE 
      just asks the endpoint to write an authentication tx to the blockchain verifying the client's presence at 
      this location. (Also gets a hash).

For more on account details and client behavior re: contracts, see animist-io/wowshuxkluh/src/accounts.js
For more on endpoint behavior see animist-io/whale-island
For more on simple Animist contract patterns and contract generation tools, see animist-io/wallowa.
-----------------------------------------------------------------------------------------------------*/
